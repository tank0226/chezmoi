name: main
on:
  pull_request:
  push:
    branches:
    - master
    tags:
    - v*
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
        - macos-latest
        - ubuntu-18.04
        - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Install age
      run: |
        git clone https://github.com/FiloSottile/age
        cd age
        go install ./cmd/...
    - name: Install GnuPG
      if: ${{ matrix.os == "windows-latest" }}
      run: winget install GnuPG
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build
      run: go build ./...
    - name: Run
      run: go run . --version
    - name: Test
      run: go test -race -v ./...
  test-release:
    runs-on: ubuntu-18.04
    steps:
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get -yq --no-install-suggests --no-install-recommends install musl-tools snapcraft
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build release
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --skip-publish --snapshot
    - name: Test release
      run: |
        # verify that version information is embedded correctly
        file ./dist/chezmoi-cgo-glibc_linux_amd64/chezmoi | tee /dev/stderr | grep -q "dynamically linked"
        file ./dist/chezmoi-cgo-musl_linux_amd64/chezmoi | tee /dev/stderr | grep -q "statically linked"
        # FIXME re-enable following tests
        #./dist/chezmoi-cgo-glibc_linux_amd64/chezmoi --version | tee /dev/stderr | grep -q "chezmoi version v"
        #./dist/chezmoi-cgo-musl_linux_amd64/chezmoi --version | tee /dev/stderr | grep -q "chezmoi version v"
        #./dist/chezmoi-nocgo_linux_386/chezmoi --version | tee /dev/stderr | grep -q "chezmoi version v"
  generate:
    runs-on: ubuntu-18.04
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Checkout
      uses: actions/checkout@v2
    - name: Generate
      run: |
        go generate
        git diff --exit-code
  lint:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.34.1
      - name: ShellCheck
        uses: ludeeus/action-shellcheck@1.0.0
        with:
          scandir: ./assets/scripts
      - name: Whitespace
        run:
          go run ./internal/cmd/lint-whitespace
  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs:
    - generate
    - lint
    - test
    - test-release
    runs-on: ubuntu-18.04
    steps:
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get -yq --no-install-suggests --no-install-recommends install musl-tools snapcraft
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Checkout
      uses: actions/checkout@v2
    - name: Snapcraft Login
      env:
        SNAPCRAFT_LOGIN: ${{ secrets.SNAPCRAFT_LOGIN }}
      run: |
        snapcraft login --with <(echo "$SNAPCRAFT_LOGIN" | base64 -d)
    - name: Release
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release
      env:
        GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
